/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./includes/assets/js/src/frontend.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./includes/assets/js/src/frontend.js":
/*!********************************************!*\
  !*** ./includes/assets/js/src/frontend.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function ($) {\n  \"use strict\"; //throttle form lodash\n\n  var throttle = __webpack_require__(/*! lodash.throttle */ \"./node_modules/lodash.throttle/index.js\"); //Quickly generates a random string\n\n\n  var randomString = function randomString() {\n    var rand = Math.random();\n    return 'key' + rand.toString(36).replace(/[^a-z]+/g, '');\n  };\n\n  var ipAddress = '';\n  $.getJSON(\"https://api.ipify.org?format=jsonp&callback=?\", function (json) {\n    if (json.ip) {\n      ipAddress = json.ip;\n    }\n  }); //Avoid displaying several popups at once...\n\n  var displayingPopup = false; //... or when the user subscribes via one popup\n\n  var subscribed = false; //Hides a displayed popup\n\n  var hidePopup = function hidePopup(inner) {\n    displayingPopup = false;\n    var wrapper = $(inner).closest('.noptin-popup-main-wrapper');\n    var form = $(wrapper).find('.noptin-optin-form-wrapper'); //Maybe animate\n\n    $(form).removeClass('noptin-animate-after');\n    var timing = parseFloat($(form).css('transition-duration'));\n\n    if (timing) {\n      timing = timing * 1000;\n    } else {\n      timing = 500;\n    }\n\n    setTimeout(function () {\n      $(\"body\").css(\"overflow\", \"auto\");\n      $(wrapper).removeClass('open');\n    }, timing);\n  }; //Displays a popup and attaches \"close\" event handlers\n\n\n  var displayPopup = function displayPopup(popup, force) {\n    if ('undefined' == typeof force) {\n      force = false;\n    }\n\n    if (!force && (displayingPopup || subscribed)) {\n      return;\n    }\n\n    displayingPopup = true; //Log form view\n\n    $.post(noptin.ajaxurl, {\n      action: \"noptin_log_form_impression\",\n      _wpnonce: noptin.nonce,\n      form_id: $(popup).find('input[name=noptin_form_id]').val()\n    });\n    var closeButton = $(popup).closest('.noptin-popup-main-wrapper').addClass('open').on('click', function (e) {\n      // if the target of the click isn't the form nor a descendant of the form.\n      if (!$(popup).is(e.target) && $(popup).has(e.target).length === 0) {\n        hidePopup(popup);\n      }\n    }).find('.noptin-form-close').on('click', function () {\n      hidePopup(popup);\n    }); //position fixed does not work on elements with transformed parents\n\n    if ($(closeButton).hasClass('top-right')) {\n      var wrapper = $(closeButton).closest('.noptin-popup-main-wrapper');\n      $(closeButton).appendTo(wrapper);\n    } //Maybe animate\n\n\n    setTimeout(function () {\n      $(\"body\").css(\"overflow\", \"hidden\");\n      $(popup).addClass('noptin-animate-after');\n    }, 100); //Some forms are only set to be displayed once per session\n\n    if (typeof $(popup).data('once-per-session') !== 'undefined') {\n      var id = $(popup).find('input[name=noptin_form_id]').val();\n      sessionStorage.setItem(\"noptinFormDisplayed\" + id, \"1\");\n    }\n  }; //Contains several triggers for displaying popups\n\n\n  var noptinDisplayPopup = {\n    //Displays a popup immeadiately\n    immeadiate: function immeadiate() {\n      displayPopup(this);\n    },\n    //Exit intent\n    before_leave: function before_leave() {\n      var _this = this;\n\n      var key = randomString(),\n          _delayTimer = null,\n          sensitivity = 0,\n          //how many pixels from the top should we display the popup?\n      delay = 200; //wait 200ms before displaying popup\n      //Display popup when the user tries to leave...\n\n      $(document).on('mouseleave.' + key, function (e) {\n        if (e.clientY > sensitivity) {\n          return;\n        }\n\n        _delayTimer = setTimeout(function () {\n          //Display the popup\n          displayPopup(_this); //Remove watchers\n\n          $(document).off('mouseleave.' + key);\n          $(document).off('mouseenter.' + key);\n        }, delay);\n      }); //...unless they decide to come back\n\n      $(document).on('mouseenter.' + key, function (e) {\n        if (_delayTimer) {\n          clearTimeout(_delayTimer);\n          _delayTimer = null;\n        }\n      });\n    },\n    //After the user starts scrolling\n    on_scroll: function on_scroll() {\n      var popup = this,\n          key = randomString(),\n          showPercent = parseInt($(this).data('on-scroll'));\n\n      var watchScroll = function watchScroll() {\n        var scrolled = $(window).scrollTop(),\n            Dheight = $(document).height(),\n            Wheight = $(window).height();\n        var scrollPercent = scrolled / (Dheight - Wheight) * 100;\n\n        if (scrollPercent > showPercent) {\n          displayPopup(popup);\n          $(window).off('scroll.' + key);\n        }\n      };\n\n      $(window).on('scroll.' + key, throttle(watchScroll, 500));\n    },\n    //after_delay\n    after_delay: function after_delay() {\n      var _this2 = this;\n\n      var delay = parseInt($(this).data('after-delay')) * 1000;\n      setTimeout(function () {\n        displayPopup(_this2);\n      }, delay);\n    },\n    //after_comment\n    after_comment: function after_comment() {\n      $('#commentform').on('submit', function (e) {//TODO\n      });\n    },\n    //after_click\n    after_click: function after_click() {\n      var el = $(this).data('after-click'),\n          popup = this;\n      $(el).on('click', function (e) {\n        e.preventDefault();\n        displayPopup(popup, true);\n      });\n    }\n  }; //Loop through all popups and attach triggers\n\n  $('.noptin-popup-main-wrapper .noptin-optin-form-wrapper').each(function () {\n    var trigger = $(this).data('trigger'); //Some forms are only set to be displayed once per session\n\n    if (typeof $(this).data('once-per-session') !== 'undefined' && 'after_click' != trigger) {\n      var id = $(this).find('input[name=noptin_form_id]').val();\n\n      if (id && sessionStorage.getItem(\"noptinFormDisplayed\" + id)) {\n        return true;\n      }\n    } //Take it to its initial state\n\n\n    $(this).addClass('noptin-animate-from');\n\n    if (noptinDisplayPopup[trigger]) {\n      var cb = noptinDisplayPopup[trigger];\n      cb.call(this);\n    }\n  }); //Submits forms via ajax\n\n  function subscribe_user(form) {\n    $(form) //https://stackoverflow.com/questions/15319942/preventing-bot-form-submission\n    .prepend('<label style=\"display: none;\"><input type=\"checkbox\" name=\"noptin_confirm_submit\"/>Are you sure?</label>'); //select the form\n\n    $(form) //what for submit events\n    .on('submit', function (e) {\n      var _this3 = this;\n\n      //Prevent the form from submitting\n      e.preventDefault(); //Modify form state\n\n      $(this).fadeTo(600, 0.5).find('.noptin_feedback_success, .noptin_feedback_error').empty().hide(); //Prep all form data\n\n      var data = {},\n          fields = $(this).serializeArray();\n      jQuery.each(fields, function (i, field) {\n        data[field.name] = field.value;\n      }); //Add nonce and action\n\n      data.action = \"noptin_new_subscriber\";\n      data._wpnonce = noptin.nonce;\n      data.ipAddress = ipAddress; //Post it to the server\n\n      $.post(noptin.ajaxurl, data) //Update the user of success\n      .done(function (data, status, xhr) {\n        if ('string' == typeof data) {\n          $(_this3).find('.noptin_feedback_error').text(data).show();\n          return;\n        } // Google Analytics\n\n\n        try {\n          if (typeof ga === 'function') {\n            ga('send', 'event', 'Noptin Form', 'Subscribe', 'Noptin');\n          } else if (typeof gtag === 'function') {\n            gtag('event', 'subscribe', {\n              'method': 'Noptin Form'\n            });\n          }\n        } catch (err) {\n          console.error(err.message);\n        }\n\n        subscribed = true;\n\n        if (data.action == 'redirect') {\n          window.location = data.redirect;\n          return;\n        } //Gutenberg\n\n\n        var url = $(_this3).find('.noptin_form_redirect').val();\n\n        if (url) {\n          window.location = url;\n          return;\n        }\n\n        if (data.action == 'msg') {\n          $(_this3).html('<div class=\"noptin-big noptin-padded\">' + data.msg + '</div>');\n          $(_this3).css({\n            display: 'flex',\n            justifyContent: 'center'\n          });\n        }\n      }).fail(function () {\n        var msg = 'Could not establish a connection to the server.';\n        $(_this3).find('.noptin_feedback_error').text(msg).show();\n      }).always(function () {\n        $(_this3).fadeTo(600, 1);\n      });\n    });\n  } //Normal forms\n\n\n  subscribe_user('.noptin-optin-form-wrapper form'); //Gutenberg forms\n\n  $('.wp-block-noptin-email-optin form, .noptin-email-optin-widget form').find('input[type=email]').attr('name', 'email');\n  subscribe_user('.wp-block-noptin-email-optin form, .noptin-email-optin-widget form');\n})(jQuery);\n\n//# sourceURL=webpack:///./includes/assets/js/src/frontend.js?");

/***/ }),

/***/ "./node_modules/lodash.throttle/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.throttle/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/lodash.throttle/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ })

/******/ });